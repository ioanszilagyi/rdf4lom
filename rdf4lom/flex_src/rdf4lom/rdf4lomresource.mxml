<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" label="Preview">

    <mx:RemoteObject id="remoteOjb" destination="remoteClass" fault="handleFault(event)" >
        <mx:method name="ConstructRDF4LOM" result="resultHandler(event)"/>
    </mx:RemoteObject>
    
	<mx:Script>      
        <![CDATA[
        	import rdf4lom.categories.components.educational.*;
        	import rdf4lom.categories.components.technical.*;        	
        	import as3.LomCategories;
        	import as3.DynCatArrays;
        
            import mx.rpc.events.*;
            import mx.collections.*;
            import mx.controls.*;
            
            public function handleFault(event:FaultEvent):void {
                // Handle fault.
                Alert.show(event.fault.faultString, "Fault");               
            }
           
            public function buildRDF4LOM():void
            {
            	// the object where all LOM categories will be stored 
            	var passLomObj:LomCategories = new LomCategories();
            	var i:int;
            	var j:int;

                // Get all the text from all the LOM categories
                //
                // General
                /// Identifier  
               	for (i=0; i<DynCatArrays.lomGIdentifier.length; i++) {
                 	passLomObj.lomGIdentifier.push(new Array(DynCatArrays.lomGIdentifier[i].catalog.text, DynCatArrays.lomGIdentifier[i].entry.text));
                }
                /// Title
               	for (i=0; i<DynCatArrays.lomGTitle.length; i++) {
                 	passLomObj.lomGTitle.push(new Array(DynCatArrays.lomGTitle[i].title.text, DynCatArrays.lomGTitle[i].lang.text));
                }
                /// Language
                passLomObj.lomGLanguage.push(DynCatArrays.lomGLanguage[0].lang.text);
                /// Description
               	for (i=0; i<DynCatArrays.lomGDescription.length; i++) {
                 	passLomObj.lomGDescription.push(DynCatArrays.lomGDescription[i].description.text);
                } 
                /// Keyword               
               	for (i=0; i<DynCatArrays.lomGKeyword.length; i++) {
                 	passLomObj.lomGKeyword.push(new Array(DynCatArrays.lomGKeyword[i].keyword.text, DynCatArrays.lomGKeyword[i].lang.text));
                }
                /// Coverage               
               	for (i=0; i<DynCatArrays.lomGCoverage.length; i++) {
                 	passLomObj.lomGCoverage.push(new Array(DynCatArrays.lomGCoverage[i].coverage.text, DynCatArrays.lomGCoverage[i].lang.text));
                }
                /// Structure
                passLomObj.lomGStructure.push(DynCatArrays.lomGStructure[0].structure.text);   
                /// Aggregation Level
                passLomObj.lomGAggregationLevel.push(DynCatArrays.lomGAggregationLevel[0].agg_level.text);
                ///////////////////////////////////
                // Life Cycle
                /// Version
                for (i=0; i<DynCatArrays.lomLVersion.length; i++) {
                 	passLomObj.lomLVersion.push(new Array(DynCatArrays.lomLVersion[i].version.text, DynCatArrays.lomLVersion[i].lang.text));
                }
                /// Status
                passLomObj.lomLStatus.push(DynCatArrays.lomLStatus[0].status.text);
				/// Contribute  
               	for (i=0; i<DynCatArrays.lomLContribute.length; i++) {
                 	passLomObj.lomLContribute.push(new Array(DynCatArrays.lomLContribute[i].role.text, DynCatArrays.lomLContribute[i].entity.text, DynCatArrays.lomLContribute[i].date.text));
                }
                ///////////////////////////////////
                // Meta-Metadata
                /// Identifier
                for (i=0; i<DynCatArrays.lomMIdentifier.length; i++) {
                 	passLomObj.lomMIdentifier.push(new Array(DynCatArrays.lomMIdentifier[i].catalog.text, DynCatArrays.lomMIdentifier[i].entry.text));
                }
				/// Contribute  
               	for (i=0; i<DynCatArrays.lomMContribute.length; i++) {
                 	passLomObj.lomMContribute.push(new Array(DynCatArrays.lomMContribute[i].role.text, DynCatArrays.lomMContribute[i].entity.text, DynCatArrays.lomMContribute[i].date.text));
                }
                /// Metadata Schema
                for (i=0; i<DynCatArrays.lomMMetadataSchema.length; i++) {
                	passLomObj.lomMMetadataSchema.push(DynCatArrays.lomMMetadataSchema[i].metadataschema.text);
                }
                /// Language
                passLomObj.lomMLanguage.push(DynCatArrays.lomMLanguage[0].lang.text);
                ///////////////////////////////////
                // Technical
                /// Format
                for (i=0; i<DynCatArrays.lomTFormat.length; i++) {
                	if (DynCatArrays.lomTFormat[i].format_nd.selected == true) {
                		passLomObj.lomTFormat.push(DynCatArrays.lomTFormat[i].format_nd.label);	
                	} else {
                		passLomObj.lomTFormat.push(DynCatArrays.lomTFormat[i].format.text);
                	}
                }
                /// Size
                passLomObj.lomTSize.push(DynCatArrays.lomTSize[0].size.text);
                /// Location
                for (i=0; i<DynCatArrays.lomTLocation.length; i++) {           
                	passLomObj.lomTLocation.push(DynCatArrays.lomTLocation[i].location.text);                
                }
                /// Requirement  
               	for (i=0; i<DynCatArrays.lomTRequirement.length; i++) {
               		var theReqArray:Array = new Array();               		
               		for (j=0; j<(DynCatArrays.lomTRequirement[i] as t_req_delete).torcomposite.getChildren().length; j++) {
               			theReqArray.push(new Array(
               				(((DynCatArrays.lomTRequirement[i] as t_req_delete).torcomposite.getChildren()[j]) as t_orc_delete).type.text,
               				(((DynCatArrays.lomTRequirement[i] as t_req_delete).torcomposite.getChildren()[j]) as t_orc_delete).tname.text,
               				(((DynCatArrays.lomTRequirement[i] as t_req_delete).torcomposite.getChildren()[j]) as t_orc_delete).minver.text,
               				(((DynCatArrays.lomTRequirement[i] as t_req_delete).torcomposite.getChildren()[j]) as t_orc_delete).maxver.text));	
               		}
               		passLomObj.lomTRequierment.push(theReqArray);                 
                }
                ///////////////////////////////////
                // Educational
                /// Educational                 
               	for (i=0; i<DynCatArrays.lomEEducational.length; i++) {
               		var theEduArray:Array = new Array();
               		// Interactivity Type
               		theEduArray.push(new Array(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).einteractivitytype.getChildAt(0) as e_int_add).interactivitytype.text)));
					// Learning Resource Type
					var theLeaResTyp:Array = new Array();					
               		for (j=0; j<(DynCatArrays.lomEEducational[i] as e_edu_delete).elearningresourcetype.getChildren().length; j++) {
               			if (j == 0) {                			
               				theLeaResTyp.push(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).elearningresourcetype.getChildAt(j) as e_lea_add).learningresourcetype.text));
               			} else {
               				theLeaResTyp.push(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).elearningresourcetype.getChildAt(j) as e_lea_delete).learningresourcetype.text));
               			}
               		}
               		theEduArray.push(theLeaResTyp);
               		// Interactivity Level
					theEduArray.push(new Array(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).einteractivitylevel.getChildAt(0) as e_int_lev_add).interactivitylevel.text)));               		
               		// Semantic Density
					theEduArray.push(new Array(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).esemanticdensity.getChildAt(0) as e_sem_add).semanticdensity.text)));
					// Intended End User Role
					var theIntEndUsr:Array = new Array();		
               		for (j=0; j<(DynCatArrays.lomEEducational[i] as e_edu_delete).eintendedendusererrole.getChildren().length; j++) {
               			if (j == 0) {                			
               				theIntEndUsr.push(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).eintendedendusererrole.getChildAt(j) as e_int_end_add).intendedendusererrole.text));
               			} else {
               				theIntEndUsr.push(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).eintendedendusererrole.getChildAt(j) as e_int_end_delete).intendedendusererrole.text));
               			}
               		}
               		theEduArray.push(theIntEndUsr);
					// Context
					var theContext:Array = new Array();		
               		for (j=0; j<(DynCatArrays.lomEEducational[i] as e_edu_delete).econtext.getChildren().length; j++) {
               			if (j == 0) {                			
               				theContext.push(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).econtext.getChildAt(j) as e_con_add).context.text));
               			} else {
               				theContext.push(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).econtext.getChildAt(j) as e_con_delete).context.text));
               			}
               		}
               		theEduArray.push(theContext);               		
               		// Typical Age Range
               		var theTypAgeRan:Array = new Array();		
               		for (j=0; j<(DynCatArrays.lomEEducational[i] as e_edu_delete).etypicalagerange.getChildren().length; j++) {
               			if (j == 0) {                			
               				theTypAgeRan.push(new Array(
               					((DynCatArrays.lomEEducational[i] as e_edu_delete).etypicalagerange.getChildAt(j) as e_typ_add).typicalagerange.text,
               					((DynCatArrays.lomEEducational[i] as e_edu_delete).etypicalagerange.getChildAt(j) as e_typ_add).lang.text));
               			} else {
               				theTypAgeRan.push(new Array(
               					((DynCatArrays.lomEEducational[i] as e_edu_delete).etypicalagerange.getChildAt(j) as e_typ_delete).typicalagerange.text,
               					((DynCatArrays.lomEEducational[i] as e_edu_delete).etypicalagerange.getChildAt(j) as e_typ_delete).lang.text));
               			}
               		}
               		theEduArray.push(theTypAgeRan); 
               		// Difficulty
               		theEduArray.push(new Array(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).edificulty.getChildAt(0) as e_dif_add).difficulty.text)));
               		// Typical Learning Time
               		theEduArray.push(new Array(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).etypicallearningtime.getChildAt(0) as e_typ_lea_add).typicallearningtime.text)));
               		// Description
               		var theDescription:Array = new Array();		
               		for (j=0; j<(DynCatArrays.lomEEducational[i] as e_edu_delete).edescription.getChildren().length; j++) {
               			if (j == 0) {                			
               				theDescription.push(new Array(
               					((DynCatArrays.lomEEducational[i] as e_edu_delete).edescription.getChildAt(j) as e_des_add).description.text,
               					((DynCatArrays.lomEEducational[i] as e_edu_delete).edescription.getChildAt(j) as e_des_add).lang.text));
               			} else {
               				theDescription.push(new Array(
               					((DynCatArrays.lomEEducational[i] as e_edu_delete).edescription.getChildAt(j) as e_des_delete).description.text,
               					((DynCatArrays.lomEEducational[i] as e_edu_delete).edescription.getChildAt(j) as e_des_delete).lang.text));
               			}
               		}
               		theEduArray.push(theDescription); 
					// Language
					var theLanguage:Array = new Array();					
               		for (j=0; j<(DynCatArrays.lomEEducational[i] as e_edu_delete).elanguage.getChildren().length; j++) {
               			if (j == 0) {                			
               				theLanguage.push(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).elanguage.getChildAt(j) as e_lan_add).lang.text));
               			} else {
               				theLanguage.push(new Array(((DynCatArrays.lomEEducational[i] as e_edu_delete).elanguage.getChildAt(j) as e_lan_delete).lang.text));
               			}
               		}
               		theEduArray.push(theLanguage);
               		
               		// add to edducational
               		passLomObj.lomEEducational.push(theEduArray);                 
                }
                
                
                //////////////////////////////////////////////
            	// the example of the object sended to java //
            	//////////////////////////////////////////////   
 				/*             
 				lomGInterface = [Ljava.lang.String;[] (Array length:2)
				[0] = java.lang.String[] (Array length:2)
        			[0] = http://www.catalog.com
        			[1] = The Entry
				[1] = java.lang.String[] (Array length:2)
        			[0] = http://www.catalog2.com
        			[1] = The Entry 2
 				*/
                // send the LOM object into java to build the related rdf
               	remoteOjb.ConstructRDF4LOM(passLomObj);
            }
         
            public function resultHandler(event:ResultEvent):void
            {
                DisplayInTextArea.text = event.result as String;
            }
        ]]>
    </mx:Script>


	<mx:VBox width="100%" height="100%" horizontalAlign="">
		<mx:Button label="Preview RDF" click="buildRDF4LOM();" x="112" y="10"/>
		<mx:Panel x="22" y="40" width="100%" height="100%">
			<mx:TextArea id="DisplayInTextArea" width="100%" height="100%"/>	
		</mx:Panel>
	</mx:VBox>
</mx:Canvas>
